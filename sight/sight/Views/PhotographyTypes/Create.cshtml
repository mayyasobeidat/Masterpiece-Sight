@model sight.Models.PhotographyType

@{
    ViewBag.Title = "Create Service";
    Layout = "~/Views/Shared/_LayoutAdminDashboard.cshtml";
}




<style>
    /*custom inpu file*/
    .custom-file-input {
        color: transparent;
    }

        .custom-file-input::-webkit-file-upload-button {
            visibility: hidden;
        }

        .custom-file-input::before {
            content: "▲ Upload Photo";
            color: #fff;
            display: inline-block;
            background: #ffc107;
            padding: 10px 22px;
            outline: none;
            white-space: nowrap;
            -webkit-user-select: none;
            cursor: pointer;
            font-weight: 400;
            border-radius: 2px;
            outline: none;
            box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);
        }

        .custom-file-input:focus {
            outline: none !important;
        }

        .custom-file-input:active::before {
            transform: scale(.9) translate(0px, 2px);
            box-shadow: inset 4px 4px 5px 0px rgba(0, 0, 0, 0.20);
        }
</style>

@using (Html.BeginForm("Create", "PhotographyTypes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row g-4">
        <h6 class="mb-4">Create Service</h6>
        <div class="col-sm-12 col-xl-6">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="bg-secondary rounded h-100 p-4">
                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Service Name</label>
                    <input type="text" class="form-control" placeholder="Enter Service Name" maxlength="70" name="TypeName" id="TypeName" required />
                    @*@Html.EditorFor(model => model.TypeName, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.TypeName, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Description</label>
                    <textarea class="form-control" id="Description" style="height: 300px;" name="Description" maxlength="250" placeholder="Describe this service" required></textarea>

                    @*@Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Describe this service", @style = "height: 300px;" })*@
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


                </div>
                <input type="submit" value="Create" class="btn btn-primary" /> |             @Html.ActionLink("Back", "Index")


                @*<button type="submit" class="btn btn-primary">Save</button>*@
            </div>
        </div>
        <div class="col-sm-12 col-xl-6">
            <input type="file" name="ImageUrl" class="custom-file-input" accept="image/*" id="myFileInput" onchange="checkFileSize()" required>
            <img id="uploaded-image" src="#" alt="Uploaded Image" style="display: none; padding:20px 0" width="100%">


            <script>
                function checkFileSize() {
                    const fileInput = document.getElementById('myFileInput');
                    const fileSize = fileInput.files[0].size / 1024 / 1024; // in MB
                    const imagePreview = document.getElementById('uploaded-image');
                    if (fileSize > 2) { // check if the file size is greater than 2 MB
                        Swal.fire({
                            title: 'Sorry',
                            text: 'File size should not exceed 2 MB',
                            icon: 'warning',
                            confirmButtonColor: '#ffc107',
                        });
                        fileInput.value = ''; // clear the input field
                        imagePreview.style.display = 'none'; // hide the image preview
                    } else {
                        imagePreview.style.display = 'block'; // show the image preview
                    }
                }

            </script>
            <script>
                const fileInput = document.getElementById('myFileInput');
                const imagePreview = document.getElementById('uploaded-image');

                fileInput.addEventListener('change', function () {
                    const file = this.files[0];

                    if (file) {
                        const reader = new FileReader();
                        reader.addEventListener('load', function () {
                            imagePreview.src = URL.createObjectURL(file);
                        });
                        reader.readAsDataURL(file);
                    } else {
                        imagePreview.src = 'default-image-source.jpg';
                    }
                });

            </script>
        </div>
        <br />
     

    </div>
}







<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.all.min.js"></script>