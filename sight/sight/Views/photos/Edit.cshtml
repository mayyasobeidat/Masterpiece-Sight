@model sight.Models.photo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutUsersPages.cshtml";
}





<style>
    /*custom inpu file*/
    .custom-file-input {
        color: transparent;
    }

        .custom-file-input::-webkit-file-upload-button {
            visibility: hidden;
        }

        .custom-file-input::before {
            content: "▲ Upload Photo";
            color: #000;
            display: inline-block;
            background: #ffc107;
            padding: 10px 22px;
            outline: none;
            white-space: nowrap;
            -webkit-user-select: none;
            cursor: pointer;
            font-weight: 400;
            border-radius: 0.375rem;
            outline: none;
            box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);
        }

        .custom-file-input:focus {
            outline: none !important;
        }

        .custom-file-input:active::before {
            transform: scale(.9) translate(0px, 2px);
            box-shadow: inset 4px 4px 5px 0px rgba(0, 0, 0, 0.20);
        }

    .boxs {
        background-color: #00000057;
        padding: 28px;
    }

    .bttn {
        padding: 9px 57px;
    }

    .deletA {
        color: red;
    }

    .pos {
        color: white;
    }
</style>


<main id="main" class="main" style="padding-top: 90px;">




    <div class="container">
        <section class="section profile">

            <div class="row">
                @using (Html.BeginForm("Edit", "photos", FormMethod.Post, new { enctype = "multipart/form-data" }))

                {
                    @Html.AntiForgeryToken()


                <div class="row g-1 boxs">
                    <div class="col-sm-12 col-xl-12">
                        <div class="container">

                            <div class="row justify-content-center align-items-center">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.id)


                                <div class="col-sm-12 col-xl-3 mb-2">
                                    @Html.DropDownList("photographyType", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.photographyType, "", new { @class = "text-danger" })
                                </div>


                                <div class="col-sm-12 col-xl-3 mb-2">
                                    @*@Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })*@

                                    <input type="text" class="form-control" placeholder="Enter a title" maxlength="150" name="title" id="title" value="@Model.title" />
                                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })

                                </div>

                                <div class="col-sm-12 col-xl-2 mb-2 row">
                                    <input type="file" onchange="checkFileSizeCover()" accept="image/*" class="custom-file-input" name="photo_url" id="myFileInputCover">


                                    <script>
                                        function checkFileSizeCover() {
                                            const fileInput = document.getElementById('myFileInputCover');
                                            const fileSize = fileInput.files[0].size / 1024 / 1024; // in MB
                                            const imagePreview = document.getElementById('myImageCover');
                                            if (fileSize > 2) { // check if the file size is greater than 2 MB
                                                Swal.fire({
                                                    title: 'Sorry',
                                                    text: 'File size should not exceed 2 MB',
                                                    icon: 'warning',
                                                    confirmButtonColor: '#ffc107',
                                                });

                                                fileInput.value = ''; // clear the input field
                                                imagePreview.style.display = 'none'; // hide the image preview
                                            } else {
                                                imagePreview.style.display = 'block'; // show the image preview
                                            }




                                        }

                                    </script>
                                </div>
                                <div class="col-sm-12 col-xl-2 mb-2 row">
                                    <input type="submit" value="Save" class="btn btn-warning bttn" />
                                </div>
                                @*<div class="col-sm-12 col-xl-2">
                        @Html.ActionLink("Back", "Edit", "photographersProfile")
                    </div>*@
                            </div>
                        </div>
                    </div>
                    <div style="background-color: #00000030 ">
                        &nbsp;
                        @Html.ActionLink("Back", "Create", new {}, new { @class = "pos" }) <span style="color:ghostwhite">|</span>
                        @Html.ActionLink("Delete", "Delete", new { id = Model.id }, new { @class = "deletA" })
                    </div>

                </div>




                }
                <img src="~/assetsUser/img/portfolio/@Model.photo_url" name="photo_url" alt="Profile" id="myImage">
                <script>
                    const fileInput = document.getElementById('myFileInputCover');
                    const imagePreview = document.getElementById('myImage');

                    fileInput.addEventListener('change', function () {
                        const file = this.files[0];

                        if (file) {
                            const reader = new FileReader();
                            reader.addEventListener('load', function () {
                                imagePreview.src = URL.createObjectURL(file);
                            });
                            reader.readAsDataURL(file);
                        } else {
                            imagePreview.src = 'default-image-source.jpg';
                        }
                    });

                </script>

            </div>
        </section>

    </div>
</main>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.all.min.js"></script>




