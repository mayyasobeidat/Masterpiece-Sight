@model sight.Models.admin

@{
    ViewBag.Title = "Edit Profile";
    Layout = "~/Views/Shared/_LayoutAdminDashboard.cshtml";
}





<style>
    /*custom inpu file*/
    .custom-file-input {
        color: transparent;
    }

        .custom-file-input::-webkit-file-upload-button {
            visibility: hidden;
        }

        .custom-file-input::before {
            content: "▲ Upload Photo";
            color: #fff;
            display: inline-block;
            background: #ffc107;
            padding: 10px 22px;
            outline: none;
            white-space: nowrap;
            -webkit-user-select: none;
            cursor: pointer;
            font-weight: 400;
            border-radius: 2px;
            outline: none;
            box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);
        }

        .custom-file-input:focus {
            outline: none !important;
        }

        .custom-file-input:active::before {
            transform: scale(.9) translate(0px, 2px);
            box-shadow: inset 4px 4px 5px 0px rgba(0, 0, 0, 0.20);
        }

    .form-control:disabled, .form-control:read-only {
        background-color: black;
        opacity: 1;
    }
</style>

@using (Html.BeginForm("Edit", "admins", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row g-4">
        <h6 class="mb-4">Profile</h6>
        <div class="col-sm-12 col-xl-6">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="bg-secondary rounded h-100 p-4">
                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Admin Name</label>
                    <input type="text" class="form-control" placeholder="Enter Yor Name" maxlength="25" name="FullName" id="FullName" value="@Model.FullName" required />

                    @*@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @maxlength = "25" } })*@
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Admin Email</label>
                    <label class="form-control">@User.Identity.Name</label>

                    @*@Html.EditorFor(model => model.AspNetUser.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.AspNetUser.Email, "", new { @class = "text-danger" })*@
                </div>



                <input type="submit" value="Create" class="btn btn-primary" /> |             @Html.ActionLink("Back", "Dashboard", "AdminDashboard")


                @*<button type="submit" class="btn btn-primary">Save</button>*@
            </div>
        </div>
        <div class="col-sm-12 col-xl-6">
            <input type="file" name="profilePhoto" class="custom-file-input" accept="image/*" id="myFileInput" onchange="checkFileSize()">
            <img src="~/assetsUser/img/@Model.profilePhoto" name="profilePhoto" alt="photo" id="myImage" style=" padding:20px 0" width="100%">
        </div>
        <br />
  
    </div>
}



<script>
    function checkFileSize() {
        const fileInput = document.getElementById('myFileInput');
        const fileSize = fileInput.files[0].size / 1024 / 1024; // in MB
        const imagePreview = document.getElementById('myImage');
        if (fileSize > 2) { // check if the file size is greater than 2 MB
            Swal.fire({
                title: 'Sorry',
                text: 'File size should not exceed 2 MB',
                icon: 'warning',
                confirmButtonColor: '#ffc107',
            });
            fileInput.value = ''; // clear the input field
            imagePreview.style.display = 'none'; // hide the image preview
        } else {
            imagePreview.style.display = 'block'; // show the image preview
        }
    }

</script>
<script>
    const fileInput = document.getElementById('myFileInput');
    const imagePreview = document.getElementById('myImage');

    fileInput.addEventListener('change', function () {
        const file = this.files[0];

        if (file) {
            const reader = new FileReader();
            reader.addEventListener('load', function () {
                imagePreview.src = URL.createObjectURL(file);
            });
            reader.readAsDataURL(file);
        } else {
            imagePreview.src = 'default-image-source.jpg';
        }
    });

</script>




<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.all.min.js"></script>